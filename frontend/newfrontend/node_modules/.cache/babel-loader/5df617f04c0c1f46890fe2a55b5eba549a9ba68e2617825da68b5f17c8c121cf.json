{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\user\\\\pages\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { getAllUsers, getUserId, verifyCredentials } from '../../shared/util/dataGetters';\nimport AuthContext from '../../shared/context/auth-context';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const {\n    Credentials,\n    setCredentials\n  } = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const login = async formState => {\n    console.log(\"Starting login\");\n    console.log(formState);\n    console.log(formState.inputs.name.value);\n    console.log(formState.inputs.password.value);\n    const email = formState.inputs.name.value;\n    const password = formState.inputs.password.value;\n    try {\n      const validity = await verifyCredentials(email, password);\n      if (validity) {\n        const thisId = await getUserId(email);\n        setCredentials(prev => ({\n          ...prev,\n          email: email,\n          password: password,\n          loggedIn: true,\n          userId: thisId\n        }));\n      } else {\n        console.log(\"invalid credentials\");\n      }\n    } catch (error) {\n      console.error(\"login error\", error);\n    }\n  };\n  const [allUsers, setAllUsers] = useState(null);\n  const [usersLoading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      const fetchedUsers = await getAllUsers();\n      setAllUsers(fetchedUsers);\n      setLoading(false);\n    };\n    fetchAllUsers();\n  }, []);\n  const [formState, inputHandler, setFormData] = useForm({\n    name: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    //auth.login();\n    login(formState);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your Full Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter your full name.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Username\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a valid username.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(5)],\n          errorText: \"Please enter a valid password, at least 5 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" List of All Valid User Credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), usersLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        count: 2,\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this) : allUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '-2px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", user.Name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", user.Password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"6qyuhor9DKbla0yF0vOoaz7SSt4=\", false, function () {\n  return [useForm];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","getAllUsers","getUserId","verifyCredentials","AuthContext","jsxDEV","_jsxDEV","Auth","_s","Credentials","setCredentials","isLoginMode","setIsLoginMode","login","formState","console","log","inputs","name","value","password","email","validity","thisId","prev","loggedIn","userId","error","allUsers","setAllUsers","usersLoading","setLoading","fetchAllUsers","fetchedUsers","inputHandler","setFormData","isValid","switchModeHandler","undefined","prevMode","authSubmitHandler","event","preventDefault","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","element","id","type","label","validators","errorText","onInput","disabled","inverse","onClick","count","height","map","user","style","padding","Name","Password","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { getAllUsers, getUserId, verifyCredentials } from '../../shared/util/dataGetters';\n\nimport AuthContext from '../../shared/context/auth-context';\n\nimport './Auth.css';\n\nconst Auth = () => {\n  const {Credentials, setCredentials} = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const login = async (formState) => {\n    console.log(\"Starting login\");\n    console.log(formState);\n    console.log(formState.inputs.name.value);\n    console.log(formState.inputs.password.value);\n    const email = formState.inputs.name.value;\n    const password = formState.inputs.password.value;\n    try {\n      const validity = await verifyCredentials(email, password);\n      if (validity){\n        const thisId = await getUserId(email);\n        setCredentials( prev => ({\n          ...prev,\n          email: email,\n          password: password, \n          loggedIn: true,\n          userId: thisId\n        }));\n\n\n      }\n      else {\n        console.log(\"invalid credentials\");\n      }\n    } catch (error){\n      console.error(\"login error\", error);\n    }    \n  }\n\n  const [allUsers, setAllUsers] = useState(null);\n  const [usersLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      const fetchedUsers = await getAllUsers(); \n      setAllUsers(fetchedUsers);\n      setLoading(false); \n    };\n\n    fetchAllUsers();\n  }, []);\n\n\n\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    //auth.login();\n    login(formState);\n  };\n\n  return (\n    <React.Fragment>\n      <Card className=\"authentication\">\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Full Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter your full name.\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Username\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid username.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n      <div className='userDisplay'>\n          <h1> List of All Valid User Credentials</h1>\n          {usersLoading ? (\n            <div count = {2} height = {20} />\n          ) : (\n            allUsers.map((user) => (\n              <div style={{ padding: '-2px'}}>\n                <p> {user.Name} </p>\n                <p> {user.Password}</p>\n              </div>\n            ))\n          )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}