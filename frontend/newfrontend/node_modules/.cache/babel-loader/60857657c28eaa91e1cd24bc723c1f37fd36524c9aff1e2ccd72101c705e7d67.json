{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\groups\\\\pages\\\\UserGroups.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GroupItem from '../components/GroupItem';\nimport './UserGroups.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport { getUserGroups, getUserNotGroups } from '../../shared/util/dataGetters';\nimport { joinGroup } from '../../shared/util/dataSetters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserGroups = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [userGroups, setUserGroups] = useState([]);\n  const [joinableGroups, setJoinableGroups] = useState([]);\n  const [popupVisible, setPopupVisible] = useState(false);\n  const navigate = useNavigate();\n\n  // Fetch user groups asynchronously using getUserGroups\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const groups = await getUserGroups(userId);\n        setUserGroups(groups || []);\n        console.log('User groups fetched:', groups);\n      } catch (error) {\n        console.error('Error fetching user groups:', error);\n        setUserGroups([]);\n      }\n    };\n    fetchGroups();\n  }, [userId]);\n\n  // Fetch joinable groups asynchronously using getUserNotGroups\n  const fetchJoinableGroups = async () => {\n    try {\n      const groups = await getUserNotGroups(userId);\n      setJoinableGroups(groups || []);\n      console.log('Joinable groups fetched:', groups);\n    } catch (error) {\n      console.error('Error fetching joinable groups:', error);\n      setJoinableGroups([]);\n    }\n  };\n  const enterGroupHandler = id => {\n    console.log(`Entering the group: ${id}`);\n    navigate(`/group/${id}`);\n  };\n  const leaveGroupHandler = groupName => {\n    console.log(`Leaving the group: ${groupName}`);\n  };\n  const showPopupHandler = async () => {\n    await fetchJoinableGroups();\n    setPopupVisible(true);\n  };\n  const hidePopupHandler = () => {\n    setPopupVisible(false);\n  };\n  const joinGroupHandler = async groupName => {\n    console.log(`Joining group: ${groupName}`);\n\n    // Prepare the data to send to the backend\n    const joinData = {\n      memberID: parseInt(userId, 10),\n      // Replace userId with the actual user ID\n      groupName: groupName\n    };\n    try {\n      // Call the joinGroup function to join the group\n      const result = await joinGroup(joinData);\n      console.log('User joined the group:', result);\n\n      // Refresh the user groups list after successful join\n      const updatedGroups = await getUserGroups(userId); // Fetch the updated groups\n      setUserGroups(updatedGroups || []);\n\n      // Add any additional logic you want to handle after joining the group\n      hidePopupHandler(); // Close the popup after joining the group\n    } catch (error) {\n      console.error('Error joining the group:', error);\n      // Handle the error (optional: show a user-friendly error message)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-groups-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-layer\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title2\",\n        children: \"User Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-group-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join-group-button\",\n        onClick: showPopupHandler,\n        \"aria-label\": \"Join a new group\",\n        children: \"View Joinable Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), popupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Available Groups to Join:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-list\",\n          children: joinableGroups.length > 0 ? joinableGroups.map(group => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-item__name\",\n              children: group.GroupName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-item__actions\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: () => joinGroupHandler(group.GroupName),\n                children: \"Join\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, group.GroupName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-groups-message\",\n            children: \"No available groups to join at this time.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: hidePopupHandler,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-list\",\n      children: userGroups.length > 0 ? userGroups.map(group => /*#__PURE__*/_jsxDEV(GroupItem, {\n        group: group,\n        onEnterGroup: () => enterGroupHandler(group.GroupName),\n        onLeaveGroup: () => leaveGroupHandler(group.GroupName)\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-groups-message\",\n        children: \"No groups found for this user.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(UserGroups, \"ebdaXfaF8Xeh22x6gbOpsjKUf6A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserGroups;\nexport default UserGroups;\nvar _c;\n$RefreshReg$(_c, \"UserGroups\");","map":{"version":3,"names":["React","useState","useEffect","GroupItem","useParams","useNavigate","Card","Button","getUserGroups","getUserNotGroups","joinGroup","jsxDEV","_jsxDEV","UserGroups","_s","userId","userGroups","setUserGroups","joinableGroups","setJoinableGroups","popupVisible","setPopupVisible","navigate","fetchGroups","groups","console","log","error","fetchJoinableGroups","enterGroupHandler","id","leaveGroupHandler","groupName","showPopupHandler","hidePopupHandler","joinGroupHandler","joinData","memberID","parseInt","result","updatedGroups","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","group","GroupName","type","onEnterGroup","onLeaveGroup","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/groups/pages/UserGroups.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GroupItem from '../components/GroupItem';\r\nimport './UserGroups.css';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { getUserGroups, getUserNotGroups } from '../../shared/util/dataGetters';\r\nimport { joinGroup } from '../../shared/util/dataSetters';\r\nconst UserGroups = () => {\r\n  const { userId } = useParams();\r\n  const [userGroups, setUserGroups] = useState([]);\r\n  const [joinableGroups, setJoinableGroups] = useState([]);\r\n  const [popupVisible, setPopupVisible] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch user groups asynchronously using getUserGroups\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      try {\r\n        const groups = await getUserGroups(userId);\r\n        setUserGroups(groups || []);\r\n        console.log('User groups fetched:', groups);\r\n      } catch (error) {\r\n        console.error('Error fetching user groups:', error);\r\n        setUserGroups([]);\r\n      }\r\n    };\r\n\r\n    fetchGroups();\r\n  }, [userId]);\r\n\r\n  // Fetch joinable groups asynchronously using getUserNotGroups\r\n  const fetchJoinableGroups = async () => {\r\n    try {\r\n      const groups = await getUserNotGroups(userId);\r\n      setJoinableGroups(groups || []);\r\n      console.log('Joinable groups fetched:', groups);\r\n    } catch (error) {\r\n      console.error('Error fetching joinable groups:', error);\r\n      setJoinableGroups([]);\r\n    }\r\n  };\r\n\r\n  const enterGroupHandler = (id) => {\r\n    console.log(`Entering the group: ${id}`);\r\n    navigate(`/group/${id}`);\r\n  };\r\n\r\n  const leaveGroupHandler = (groupName) => {\r\n    console.log(`Leaving the group: ${groupName}`);\r\n  };\r\n\r\n  const showPopupHandler = async () => {\r\n    await fetchJoinableGroups();\r\n    setPopupVisible(true);\r\n  };\r\n\r\n  const hidePopupHandler = () => {\r\n    setPopupVisible(false);\r\n  };\r\n\r\n  const joinGroupHandler = async (groupName) => {\r\n    console.log(`Joining group: ${groupName}`);\r\n  \r\n    // Prepare the data to send to the backend\r\n    const joinData = {\r\n      memberID: parseInt(userId, 10),    // Replace userId with the actual user ID\r\n      groupName: groupName\r\n    };\r\n  \r\n    try {\r\n      // Call the joinGroup function to join the group\r\n      const result = await joinGroup(joinData);\r\n      console.log('User joined the group:', result);\r\n  \r\n      // Refresh the user groups list after successful join\r\n      const updatedGroups = await getUserGroups(userId);  // Fetch the updated groups\r\n      setUserGroups(updatedGroups || []);\r\n  \r\n      // Add any additional logic you want to handle after joining the group\r\n      hidePopupHandler(); // Close the popup after joining the group\r\n    } catch (error) {\r\n      console.error('Error joining the group:', error);\r\n      // Handle the error (optional: show a user-friendly error message)\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"user-groups-container\">\r\n      {/* Background layer with title on top */}\r\n      <div className=\"background-layer\">\r\n        <h1 className=\"page-title2\">User Groups</h1>\r\n      </div>\r\n\r\n      {/* Join Group Button */}\r\n      <div className=\"join-group-button-container\">\r\n        <button\r\n          className=\"join-group-button\"\r\n          onClick={showPopupHandler}\r\n          aria-label=\"Join a new group\"\r\n        >\r\n          View Joinable Groups\r\n        </button>\r\n      </div>\r\n\r\n      {/* Joinable Groups Popup */}\r\n      {popupVisible && (\r\n        <div className=\"popup-overlay\">\r\n          <div className=\"popup\">\r\n            <h3>Available Groups to Join:</h3>\r\n            <div className=\"group-list\">\r\n              {joinableGroups.length > 0 ? (\r\n                joinableGroups.map((group) => (\r\n                  <Card key={group.GroupName} className=\"group-item\">\r\n                    <div className=\"group-item__name\">{group.GroupName}</div>\r\n                    <div className=\"group-item__actions\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={() => joinGroupHandler(group.GroupName)}\r\n                      >\r\n                        Join\r\n                      </Button>\r\n                    </div>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <p className=\"no-groups-message\">\r\n                  No available groups to join at this time.\r\n                </p>\r\n              )}\r\n            </div>\r\n            <Button onClick={hidePopupHandler}>Close</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Displaying user groups */}\r\n      <div className=\"group-list\">\r\n        {userGroups.length > 0 ? (\r\n          userGroups.map((group) => (\r\n            <GroupItem\r\n              key={group.id}\r\n              group={group}\r\n              onEnterGroup={() => enterGroupHandler(group.GroupName)}\r\n              onLeaveGroup={() => leaveGroupHandler(group.GroupName)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"no-groups-message\">No groups found for this user.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGroups;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}