{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\locations\\\\components\\\\Guide.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { getComments } from '../../shared/util/dataGetters';\nimport GroupPostComment from '../../groups/components/GroupPostComment';\nimport './guide.css';\nimport { submitComment } from '../../shared/util/dataSetters';\nimport AuthContext from '../../shared/context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Guide = ({\n  cityGuide,\n  memberNames\n}) => {\n  _s();\n  const {\n    Credentials\n  } = useContext(AuthContext);\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState(false);\n  const [newComment, setNewComment] = useState(''); // State to store new comment text\n\n  const handleToggleComments = async () => {\n    if (!showComments) {\n      const fetchedComments = await getComments(cityGuide.PostID); // Fetch comments using the postId\n      setComments(fetchedComments);\n    }\n    setShowComments(!showComments); // Toggle the visibility of comments\n  };\n  const handleCommentChange = e => {\n    setNewComment(e.target.value); // Update the new comment as user types\n  };\n  const handleSubmitComment = async () => {\n    if (newComment.trim()) {\n      const newCommentData = {\n        Text: newComment,\n        PostID: cityGuide.PostID,\n        MemberID: Credentials.userId,\n        // Assuming cityGuide.MemberID is the ID of the person making the comment\n        Media: null,\n        // If the user can add media, update this field accordingly\n        Date: new Date().toISOString().split('T')[0],\n        // Get the current date in YYYY-MM-DD format\n        Rating: 1 // Add a rating if necessary, otherwise leave null\n      };\n\n      // Add the new comment to the state (for now we assume this is a client-side update)\n      setComments(prevComments => [...prevComments, newCommentData]);\n\n      // Optionally, reset the newComment state\n      setNewComment('');\n\n      // Call a function to submit the comment to the backend (e.g., POST request)\n      try {\n        // Assuming you have an API function `submitComment` for sending POST requests to the backend\n        await submitComment(newCommentData); // This would post the comment to your Express API\n      } catch (error) {\n        console.error('Error submitting comment:', error);\n        alert('Error submitting comment');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-guide\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"city-guide-title\",\n      children: cityGuide.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"city-guide-description\",\n      children: cityGuide.Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-guide-activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Activities: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), cityGuide.ActivityTypes.join(', ') || 'Not listed']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-guide-key-points\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Key Points: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), cityGuide.KeyPoints || 'No key points available']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-guide-rating\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Rating: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), cityGuide.Rating || 'Not rated']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-guide-date\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), new Date(cityGuide.Date).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-guide-member\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Created by: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), memberNames[cityGuide.MemberID] || 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: handleCommentChange,\n        placeholder: \"Add a comment...\",\n        rows: \"2\" // Smaller height for the text area\n        ,\n        className: \"comment-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitComment,\n        className: \"submit-comment-button\",\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleComments,\n      children: showComments ? 'Hide Comments' : 'Show Comments'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(GroupPostComment, {\n        comment: comment\n      }, comment.CommentID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Guide, \"+NwWVFkXk6imyVLeEjz4yjBmaig=\");\n_c = Guide;\nexport default Guide;\nvar _c;\n$RefreshReg$(_c, \"Guide\");","map":{"version":3,"names":["React","useState","useContext","getComments","GroupPostComment","submitComment","AuthContext","jsxDEV","_jsxDEV","Guide","cityGuide","memberNames","_s","Credentials","comments","setComments","showComments","setShowComments","newComment","setNewComment","handleToggleComments","fetchedComments","PostID","handleCommentChange","e","target","value","handleSubmitComment","trim","newCommentData","Text","MemberID","userId","Media","Date","toISOString","split","Rating","prevComments","error","console","alert","className","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","Description","ActivityTypes","join","KeyPoints","toLocaleDateString","onChange","placeholder","rows","onClick","length","map","comment","CommentID","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/locations/components/Guide.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { getComments } from '../../shared/util/dataGetters';\r\nimport GroupPostComment from '../../groups/components/GroupPostComment';\r\nimport './guide.css';\r\nimport { submitComment } from '../../shared/util/dataSetters';\r\nimport AuthContext from '../../shared/context/auth-context';\r\n\r\nconst Guide = ({ cityGuide, memberNames }) => {\r\n  const { Credentials } = useContext(AuthContext);\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [newComment, setNewComment] = useState(''); // State to store new comment text\r\n\r\n  const handleToggleComments = async () => {\r\n    if (!showComments) {\r\n      const fetchedComments = await getComments(cityGuide.PostID); // Fetch comments using the postId\r\n      setComments(fetchedComments);\r\n    }\r\n    setShowComments(!showComments); // Toggle the visibility of comments\r\n  };\r\n\r\n  const handleCommentChange = (e) => {\r\n    setNewComment(e.target.value); // Update the new comment as user types\r\n  };\r\n\r\n  const handleSubmitComment = async () => {\r\n    if (newComment.trim()) {\r\n      const newCommentData = {\r\n        Text: newComment,\r\n        PostID: cityGuide.PostID,\r\n        MemberID: Credentials.userId, // Assuming cityGuide.MemberID is the ID of the person making the comment\r\n        Media: null, // If the user can add media, update this field accordingly\r\n        Date: new Date().toISOString().split('T')[0], // Get the current date in YYYY-MM-DD format\r\n        Rating: 1, // Add a rating if necessary, otherwise leave null\r\n      };\r\n\r\n      // Add the new comment to the state (for now we assume this is a client-side update)\r\n      setComments((prevComments) => [...prevComments, newCommentData]);\r\n\r\n      // Optionally, reset the newComment state\r\n      setNewComment('');\r\n\r\n      // Call a function to submit the comment to the backend (e.g., POST request)\r\n      try {\r\n        // Assuming you have an API function `submitComment` for sending POST requests to the backend\r\n        await submitComment(newCommentData);  // This would post the comment to your Express API\r\n      } catch (error) {\r\n        console.error('Error submitting comment:', error);\r\n        alert('Error submitting comment');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"city-guide\">\r\n      <h3 className=\"city-guide-title\">{cityGuide.Title}</h3>\r\n      <p className=\"city-guide-description\">{cityGuide.Description}</p>\r\n      <div className=\"city-guide-activities\">\r\n        <strong>Activities: </strong>{cityGuide.ActivityTypes.join(', ') || 'Not listed'}\r\n      </div>\r\n      <div className=\"city-guide-key-points\">\r\n        <strong>Key Points: </strong>{cityGuide.KeyPoints || 'No key points available'}\r\n      </div>\r\n      <div className=\"city-guide-rating\">\r\n        <strong>Rating: </strong>{cityGuide.Rating || 'Not rated'}\r\n      </div>\r\n      <div className=\"city-guide-date\">\r\n        <strong>Date: </strong>{new Date(cityGuide.Date).toLocaleDateString()}\r\n      </div>\r\n      <div className=\"city-guide-member\">\r\n        <strong>Created by: </strong>{memberNames[cityGuide.MemberID] || 'Loading...'}\r\n      </div>\r\n\r\n      {/* Submit comment box */}\r\n      <div className=\"add-comment\">\r\n        <textarea \r\n          value={newComment}\r\n          onChange={handleCommentChange}\r\n          placeholder=\"Add a comment...\"\r\n          rows=\"2\" // Smaller height for the text area\r\n          className=\"comment-textarea\"\r\n        />\r\n        <button onClick={handleSubmitComment} className=\"submit-comment-button\">\r\n          Submit Comment\r\n        </button>\r\n      </div>\r\n\r\n      <button onClick={handleToggleComments}>\r\n        {showComments ? 'Hide Comments' : 'Show Comments'}\r\n      </button>\r\n\r\n      {showComments && (\r\n        <div className=\"comments\">\r\n          {comments.length > 0 ? (\r\n            comments.map((comment) => (\r\n              <GroupPostComment \r\n                key={comment.CommentID} \r\n                comment={comment} \r\n              />\r\n            ))\r\n          ) : (\r\n            <p>No comments available.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Guide;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}