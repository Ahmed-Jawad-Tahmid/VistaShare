{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\groups\\\\components\\\\GroupPostFull.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useParams } from 'react-router-dom';\nimport getPost from '../../shared/util/dataGetters';\nimport { getComments } from '../../shared/util/dataGetters';\nimport GroupPostComment from './GroupPostComment';\nimport './GroupPostFull.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupPostFull = () => {\n  _s();\n  const params = useParams();\n  const postId = params.id;\n  console.log(\"loading post \" + postId);\n  const [post, setPost] = useState(null);\n  const [PostComments, setPostComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPostData = async () => {\n      const [fetchedPost, fetchedComments] = await Promise.all([getPost(postId), getComments(postId)]);\n      console.log(fetchedPost);\n      console.log(fetchedComments);\n      setPost(fetchedPost);\n      setPostComments(fetchedComments);\n      setLoading(false);\n    };\n    console.log(post);\n    console.log(PostComments);\n    fetchPostData();\n  }, [postId]);\n  const IncrementMetric = () => {\n    console.log(\"imagine it increments\");\n  };\n  const DecrementMetric = () => {\n    console.log(\"imagine it increments\");\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Metrics\",\n        children: [\"+\", post.Rating, /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: '#ff4d4d'\n          },\n          onClick: IncrementMetric,\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: DecrementMetric,\n          children: \"Dislike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-list\",\n      children: PostComments.map(comment => /*#__PURE__*/_jsxDEV(GroupPostComment, {\n        comment: comment\n      }, comment.CommentID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupPostFull, \"nasINxSAeQTbH/QWyP03qWSh1ME=\", false, function () {\n  return [useParams];\n});\n_c = GroupPostFull;\nexport default GroupPostFull;\nvar _c;\n$RefreshReg$(_c, \"GroupPostFull\");","map":{"version":3,"names":["React","useState","useEffect","Button","useParams","getPost","getComments","GroupPostComment","jsxDEV","_jsxDEV","GroupPostFull","_s","params","postId","id","console","log","post","setPost","PostComments","setPostComments","loading","setLoading","fetchPostData","fetchedPost","fetchedComments","Promise","all","IncrementMetric","DecrementMetric","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Title","Text","Rating","style","backgroundColor","onClick","map","comment","CommentID","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/groups/components/GroupPostFull.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { useParams } from 'react-router-dom';\r\nimport getPost from '../../shared/util/dataGetters';\r\nimport { getComments } from '../../shared/util/dataGetters';\r\nimport GroupPostComment from './GroupPostComment';\r\nimport './GroupPostFull.css';\r\n\r\nconst GroupPostFull = () => {\r\n    const params  = useParams(); \r\n    const postId = params.id; \r\n    console.log(\"loading post \" + postId);\r\n    const [post, setPost] = useState(null);\r\n    const [PostComments, setPostComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchPostData = async () => {\r\n            const [fetchedPost, fetchedComments] = await Promise.all([\r\n                getPost(postId),\r\n                getComments(postId)\r\n              ]);\r\n            console.log(fetchedPost);\r\n            console.log(fetchedComments);\r\n            setPost(fetchedPost);\r\n            setPostComments(fetchedComments);\r\n            setLoading(false);\r\n        };\r\n        console.log(post);\r\n        console.log(PostComments); \r\n\r\n        fetchPostData();\r\n    }, [postId]);\r\n\r\n    const IncrementMetric = () => {\r\n        console.log(\"imagine it increments\");\r\n    };\r\n\r\n    const DecrementMetric = () => {\r\n        console.log(\"imagine it increments\");\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (!post) {\r\n        return <div>Post not found</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"PostBody\"> \r\n                <h1>{post.Title}</h1>\r\n                <div>{post.Text}</div>\r\n                <div className=\"Metrics\">\r\n                    +{post.Rating}\r\n                    <Button style = {{backgroundColor: '#ff4d4d'}}         \r\n                    onClick={IncrementMetric}>Like</Button>\r\n                    <Button onClick={DecrementMetric}>Dislike</Button>\r\n                </div>    \r\n            </div>\r\n            \r\n            <div className=\"comment-list\"> \r\n                {PostComments.map((comment) => (\r\n                    <GroupPostComment \r\n                        key={comment.CommentID}\r\n                        comment={comment}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>        \r\n    );\r\n};\r\n\r\nexport default GroupPostFull;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}