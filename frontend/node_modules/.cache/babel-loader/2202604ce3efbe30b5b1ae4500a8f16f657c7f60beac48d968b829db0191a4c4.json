{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\user\\\\pages\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { getUserId, verifyCredentials } from '../../shared/util/dataGetters';\nimport { registerUser } from '../../shared/util/dataSetters';\nimport AuthContext from '../../shared/context/auth-context';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const {\n    setCredentials\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler] = useForm({\n    name: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const loginHandler = async () => {\n    const {\n      name,\n      password\n    } = formState.inputs;\n    try {\n      const validity = await verifyCredentials(name.value, password.value);\n      if (validity) {\n        const thisId = await getUserId(name.value);\n        setCredentials({\n          name: name.value,\n          password: password.value,\n          loggedIn: true,\n          userId: thisId\n        });\n        console.log(\"HERE0\");\n        navigate('/explore');\n      } else {\n        console.log('Invalid credentials');\n        alert('Invalid username or password. Please try again.');\n      }\n    } catch (err) {\n      console.error('Login error', err);\n      alert('An error occurred during login. Please try again later.');\n    }\n  };\n  const signupHandler = async () => {\n    const {\n      name,\n      password\n    } = formState.inputs;\n    try {\n      const success = await registerUser({\n        name: name.value,\n        password: password.value\n      });\n      if (success) {\n        alert('Signup successful. You can now log in.');\n        setIsLoginMode(true); // Switch to login mode after successful signup\n      } else {\n        console.log('Signup failed');\n        alert('Signup failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Signup error', err);\n      alert('An error occurred during signup. Please try again later.');\n    }\n  };\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    if (isLoginMode) {\n      loginHandler();\n    } else {\n      signupHandler();\n    }\n  };\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"authentication\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [isLoginMode ? 'Login' : 'Signup', \" Required\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"name\",\n        type: \"text\",\n        label: \"Username\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid username.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid password, at least 5 characters.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"EyRLApBdMgsRZPTllXS2JtxNe+4=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Card","Input","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","getUserId","verifyCredentials","registerUser","AuthContext","jsxDEV","_jsxDEV","Auth","_s","setCredentials","navigate","isLoginMode","setIsLoginMode","formState","inputHandler","name","value","isValid","password","loginHandler","inputs","validity","thisId","loggedIn","userId","console","log","alert","err","error","signupHandler","success","authSubmitHandler","event","preventDefault","switchModeHandler","prevMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","element","id","type","label","validators","errorText","onInput","disabled","inverse","onClick","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { getUserId, verifyCredentials } from '../../shared/util/dataGetters';\nimport { registerUser } from '../../shared/util/dataSetters';\nimport AuthContext from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const { setCredentials } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const [formState, inputHandler] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const loginHandler = async () => {\n    const { name, password } = formState.inputs;\n\n    try {\n      const validity = await verifyCredentials(name.value, password.value);\n      if (validity) {\n        const thisId = await getUserId(name.value);\n        setCredentials({\n          name: name.value,\n          password: password.value,\n          loggedIn: true,\n          userId: thisId\n        });\n        console.log(\"HERE0\");\n        navigate('/explore');\n      } else {\n        console.log('Invalid credentials');\n        alert('Invalid username or password. Please try again.');\n      }\n    } catch (err) {\n      console.error('Login error', err);\n      alert('An error occurred during login. Please try again later.');\n    }\n  };\n\n  const signupHandler = async () => {\n    const { name, password } = formState.inputs;\n\n    try {\n      const success = await registerUser({ name: name.value, password: password.value });\n      if (success) {\n        alert('Signup successful. You can now log in.');\n        setIsLoginMode(true); // Switch to login mode after successful signup\n      } else {\n        console.log('Signup failed');\n        alert('Signup failed. Please try again.');\n      }\n    } catch (err) {\n      console.error('Signup error', err);\n      alert('An error occurred during signup. Please try again later.');\n    }\n  };\n\n  const authSubmitHandler = (event) => {\n    event.preventDefault();\n    if (isLoginMode) {\n      loginHandler();\n    } else {\n      signupHandler();\n    }\n  };\n\n  const switchModeHandler = () => {\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <h2>{isLoginMode ? 'Login' : 'Signup'} Required</h2>\n      <hr />\n      <form onSubmit={authSubmitHandler}>\n        <Input\n          element=\"input\"\n          id=\"name\"\n          type=\"text\"\n          label=\"Username\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid username.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n        </Button>\n      </form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}