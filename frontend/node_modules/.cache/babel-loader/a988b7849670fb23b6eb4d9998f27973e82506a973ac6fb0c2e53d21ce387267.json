{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\groups\\\\pages\\\\UserGroups.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GroupItem from '../components/GroupItem';\nimport './UserGroups.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport { getUserGroups } from '../../shared/util/dataGetters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserGroups = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [userGroups, setUserGroups] = useState([]);\n  const [isJoinOpen, setJoinModal] = useState(false);\n  const [groupIdInput, setGroupIdInput] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch user groups asynchronously\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const groups = await getUserGroups(userId);\n        setUserGroups(groups || []);\n        console.log(\"successful fetch\", groups);\n      } catch (error) {\n        console.error(\"Error fetching user groups:\", error);\n        setUserGroups([]);\n      }\n    };\n    fetchGroups();\n  }, [userId]);\n  const enterGroupHandler = id => {\n    console.log(`Entering the group: ${id}`);\n    navigate(`/group/${id}`);\n  };\n  const leaveGroupHandler = groupName => {\n    console.log(`Leaving the group: ${groupName}`);\n  };\n  const showJoinModalHandler = () => setJoinModal(true);\n  const closeJoinModalHandler = () => {\n    setJoinModal(false);\n    setGroupIdInput('');\n  };\n  const confirmJoinHandler = () => {\n    console.log(`Attempting to join the group with ID: ${groupIdInput}`);\n    closeJoinModalHandler();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-groups-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"User Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-group-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join-group-button\",\n        onClick: showJoinModalHandler,\n        \"aria-label\": \"Join a new group\",\n        children: \"Join a Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: isJoinOpen,\n      onCancel: closeJoinModalHandler,\n      header: \"Join Group\",\n      footer: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeJoinModalHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmJoinHandler,\n          type: \"primary\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"groupIdInput\",\n          children: \"Enter the group ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"groupIdInput\",\n          type: \"text\",\n          placeholder: \"Group ID\",\n          value: groupIdInput,\n          onChange: e => setGroupIdInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-list\",\n      children: userGroups.length > 0 ? userGroups.map(group => /*#__PURE__*/_jsxDEV(GroupItem, {\n        group: group,\n        onEnterGroup: () => enterGroupHandler(group.GroupName),\n        onLeaveGroup: () => leaveGroupHandler(group.GroupName)\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-groups-message\",\n        children: \"No groups found for this user.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(UserGroups, \"b3YJkyBc7DN6HFKTIkE7AbjZT+A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserGroups;\nexport default UserGroups;\nvar _c;\n$RefreshReg$(_c, \"UserGroups\");","map":{"version":3,"names":["React","useState","useEffect","GroupItem","useParams","useNavigate","Card","Button","Modal","getUserGroups","jsxDEV","_jsxDEV","UserGroups","_s","userId","userGroups","setUserGroups","isJoinOpen","setJoinModal","groupIdInput","setGroupIdInput","navigate","fetchGroups","groups","console","log","error","enterGroupHandler","id","leaveGroupHandler","groupName","showJoinModalHandler","closeJoinModalHandler","confirmJoinHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","show","onCancel","header","footer","Fragment","type","htmlFor","placeholder","value","onChange","e","target","length","map","group","onEnterGroup","GroupName","onLeaveGroup","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/groups/pages/UserGroups.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GroupItem from '../components/GroupItem';\r\nimport './UserGroups.css';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport { getUserGroups } from '../../shared/util/dataGetters';\r\n\r\nconst UserGroups = () => {\r\n  const { userId } = useParams();\r\n  const [userGroups, setUserGroups] = useState([]);\r\n  const [isJoinOpen, setJoinModal] = useState(false);\r\n  const [groupIdInput, setGroupIdInput] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch user groups asynchronously\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      try {\r\n        const groups = await getUserGroups(userId);\r\n        setUserGroups(groups || []);\r\n        console.log(\"successful fetch\", groups);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user groups:\", error);\r\n        setUserGroups([]);\r\n      }\r\n    };\r\n\r\n    fetchGroups();\r\n  }, [userId]);\r\n\r\n  const enterGroupHandler = (id) => {\r\n    console.log(`Entering the group: ${id}`);\r\n    navigate(`/group/${id}`);\r\n  };\r\n\r\n  const leaveGroupHandler = (groupName) => {\r\n    console.log(`Leaving the group: ${groupName}`);\r\n  };\r\n\r\n  const showJoinModalHandler = () => setJoinModal(true);\r\n  const closeJoinModalHandler = () => {\r\n    setJoinModal(false);\r\n    setGroupIdInput('');\r\n  };\r\n\r\n  const confirmJoinHandler = () => {\r\n    console.log(`Attempting to join the group with ID: ${groupIdInput}`);\r\n    closeJoinModalHandler();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-groups-container\">\r\n      <h1 className=\"page-title\">User Groups</h1>\r\n\r\n      {/* Join Group Button */}\r\n      <div className=\"join-group-button-container\">\r\n        <button\r\n          className=\"join-group-button\"\r\n          onClick={showJoinModalHandler}\r\n          aria-label=\"Join a new group\"\r\n        >\r\n          Join a Group\r\n        </button>\r\n      </div>\r\n\r\n      {/* Modal for joining a group */}\r\n      <Modal\r\n        show={isJoinOpen}\r\n        onCancel={closeJoinModalHandler}\r\n        header=\"Join Group\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button onClick={closeJoinModalHandler}>Cancel</Button>\r\n            <Button onClick={confirmJoinHandler} type=\"primary\">\r\n              Join\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <div className=\"modal-content\">\r\n          <label htmlFor=\"groupIdInput\">Enter the group ID</label>\r\n          <input\r\n            id=\"groupIdInput\"\r\n            type=\"text\"\r\n            placeholder=\"Group ID\"\r\n            value={groupIdInput}\r\n            onChange={(e) => setGroupIdInput(e.target.value)}\r\n          />\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Displaying user groups */}\r\n      <div className=\"group-list\">\r\n        {userGroups.length > 0 ? (\r\n          userGroups.map((group) => (\r\n            <GroupItem\r\n              key={group.id}\r\n              group={group}\r\n              onEnterGroup={() => enterGroupHandler(group.GroupName)}\r\n              onLeaveGroup={() => leaveGroupHandler(group.GroupName)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"no-groups-message\">No groups found for this user.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGroups;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}