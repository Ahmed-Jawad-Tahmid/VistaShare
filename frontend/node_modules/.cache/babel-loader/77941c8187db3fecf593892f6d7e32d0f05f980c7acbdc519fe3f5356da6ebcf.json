{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\shared\\\\util\\\\TestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport getPost, { getAllUsers, getComments, getGroup, getGroupPosts, getUserGroups, getUserId, getUserName, verifyCredentials } from './dataGetters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchAllData = async () => {\n  try {\n    const response = await axios.get('/api/test');\n    console.log(\"fetched data: \");\n    console.log(response.data.data);\n    return response.data.data;\n  } catch (error) {\n    console.error('Failed data request', error);\n    return null;\n  }\n};\nconst TestPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [testPost, setPost] = useState([]);\n  const [testComments, setComments] = useState([]);\n  const [testName, setName] = useState([]);\n  const [testGroup, setGroup] = useState([]);\n  const [testGroupPosts, setGroupPosts] = useState([]);\n  const [testUserGroups, setUserGroups] = useState([]);\n  const [testAuth, setAuth] = useState(null);\n  const [testUid, setUid] = useState(null);\n  const [testUsers, setUsers] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await fetchAllData();\n        const tuple = await getPost('26');\n        const comments = await getComments('26');\n        const name = await getUserName('1');\n        const group = await getGroup(\"Adventure Seekers\");\n        const groupPosts = await getGroupPosts(\"Adventure Seekers\");\n        const userGroups = await getUserGroups(\"1\");\n        const auth = await verifyCredentials(\"John Doe\", \"password1234\");\n        const uid = await getUserId(\"John Doe\");\n        const users = await getAllUsers();\n        setData(response);\n        setPost(tuple);\n        setComments(comments);\n        setName(name);\n        setGroup(group);\n        setGroupPosts(groupPosts);\n        setUserGroups(userGroups);\n        setAuth(auth);\n        setUid(uid);\n        setUsers(users);\n        setLoading(false);\n        console.log(\"returned data: \");\n        console.log(data);\n        console.log(response);\n        console.log(\"the data is an array: \");\n        console.log(Array.isArray(response));\n        console.log(testGroupPosts);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetch();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), JSON.stringify(testPost), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), JSON.stringify(testComments), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test name by id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), JSON.stringify(testName), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test group by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), JSON.stringify(testGroup), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test group posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), JSON.stringify(testGroupPosts), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test user groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), JSON.stringify(testUserGroups), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test user auth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), JSON.stringify(testAuth), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test uid from name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), JSON.stringify(testUid), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Test all users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), JSON.stringify(testUsers), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Database Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(item)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPage, \"4PqRl9HfLhYpqkGeCMJeTHYpmcg=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","getPost","getAllUsers","getComments","getGroup","getGroupPosts","getUserGroups","getUserId","getUserName","verifyCredentials","jsxDEV","_jsxDEV","fetchAllData","response","get","console","log","data","error","TestPage","_s","setData","setError","loading","setLoading","testPost","setPost","testComments","setComments","testName","setName","testGroup","setGroup","testGroupPosts","setGroupPosts","testUserGroups","setUserGroups","testAuth","setAuth","testUid","setUid","testUsers","setUsers","fetch","tuple","comments","name","group","groupPosts","userGroups","auth","uid","users","Array","isArray","message","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","map","item","index","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/shared/util/TestPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport getPost, { getAllUsers, getComments, getGroup, getGroupPosts, getUserGroups, getUserId, getUserName, verifyCredentials } from './dataGetters';\r\nconst fetchAllData = async () => {\r\n    try {\r\n        const response = await axios.get('/api/test')\r\n        console.log(\"fetched data: \")\r\n        console.log(response.data.data);\r\n        return response.data.data; \r\n    } catch (error){\r\n        console.error('Failed data request', error);\r\n        return null\r\n    }\r\n}\r\n\r\n\r\nconst TestPage = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [testPost, setPost] = useState([]);\r\n  const [testComments, setComments] = useState([]);\r\n  const [testName, setName] = useState([]);\r\n  const [testGroup, setGroup] = useState([]);\r\n  const [testGroupPosts, setGroupPosts] = useState([]);\r\n  const [testUserGroups, setUserGroups] = useState([]);\r\n  const [testAuth, setAuth] = useState(null);\r\n  const [testUid, setUid] = useState(null);\r\n  const [testUsers, setUsers] = useState([]); \r\n\r\n  useEffect(() => {\r\n    const fetch = async () =>{\r\n        try {\r\n            const response = await fetchAllData();\r\n            const tuple = await getPost('26');\r\n            const comments = await getComments('26');\r\n            const name = await getUserName('1');\r\n            const group = await getGroup(\"Adventure Seekers\");\r\n            const groupPosts = await getGroupPosts(\"Adventure Seekers\");\r\n            const userGroups = await getUserGroups(\"1\");\r\n            const auth = await verifyCredentials(\"John Doe\", \"password1234\")\r\n            const uid = await getUserId(\"John Doe\");\r\n            const users = await getAllUsers();\r\n\r\n            setData(response);\r\n            setPost(tuple);\r\n            setComments(comments);\r\n            setName(name);\r\n            setGroup(group);\r\n            setGroupPosts(groupPosts);\r\n            setUserGroups(userGroups);\r\n            setAuth(auth);\r\n            setUid(uid);\r\n            setUsers(users);\r\n\r\n\r\n            setLoading(false);\r\n\r\n            console.log(\"returned data: \")\r\n            console.log(data);\r\n            console.log(response);\r\n            \r\n            console.log(\"the data is an array: \");\r\n            console.log(Array.isArray(response));\r\n            console.log(testGroupPosts);\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    fetch();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div>\r\n        <h2> Test Post</h2>\r\n        {JSON.stringify(testPost)}\r\n        <h2> Test Comments</h2>\r\n        {JSON.stringify(testComments)}\r\n        <h2> Test name by id</h2>\r\n        {JSON.stringify(testName)}\r\n        <h2> Test group by name</h2>\r\n        {JSON.stringify(testGroup)}\r\n        <h2> Test group posts</h2>\r\n        {JSON.stringify(testGroupPosts)}\r\n        <h2> Test user groups</h2>\r\n        {JSON.stringify(testUserGroups)}\r\n        <h2> Test user auth</h2>\r\n        {JSON.stringify(testAuth)}\r\n        <h2> Test uid from name</h2>\r\n        {JSON.stringify(testUid)}\r\n        <h2> Test all users</h2>\r\n        {JSON.stringify(testUsers)}\r\n      <h1>All Database Data</h1>\r\n      <ul>\r\n        {data.map((item, index) => (\r\n          <li key={index}>\r\n            {JSON.stringify(item)}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}