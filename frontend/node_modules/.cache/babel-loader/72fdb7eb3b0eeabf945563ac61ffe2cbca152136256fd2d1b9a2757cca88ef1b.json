{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\travel\\\\components\\\\TravelLogItem.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getCity } from \"../../shared/util/dataGetters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TravelLogItem = ({\n  log\n}) => {\n  _s();\n  const [cityName, setCityName] = useState(\"\"); // State variable to hold the city name\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCity = async () => {\n      try {\n        // Assuming getCity(id) fetches city information by CityID\n        const cityData = await getCity(log.CityID);\n        if (cityData) {\n          setCityName(cityData.name); // Update the city name state\n        } else {\n          setError(\"City not found.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch city data.\");\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (log.CityID) {\n      fetchCity(); // Trigger the fetch when the CityID is available\n    }\n  }, [log.CityID]); // Dependency array ensures the effect runs when CityID changes\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading city...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"travel-log-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: cityName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), \" \", log.Date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Duration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }, this), \" \", log.DurationOfStay, \" days\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TravelLogItem, \"ybbGdqbqS+ORFj2hUT/DuTjYTEY=\");\n_c = TravelLogItem;\nexport default TravelLogItem;\nvar _c;\n$RefreshReg$(_c, \"TravelLogItem\");","map":{"version":3,"names":["React","useEffect","useState","getCity","jsxDEV","_jsxDEV","TravelLogItem","log","_s","cityName","setCityName","isLoading","setIsLoading","error","setError","fetchCity","cityData","CityID","name","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Date","DurationOfStay","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/travel/components/TravelLogItem.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getCity } from \"../../shared/util/dataGetters\";\r\n\r\nconst TravelLogItem = ({ log }) => {\r\n  const [cityName, setCityName] = useState(\"\"); // State variable to hold the city name\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCity = async () => {\r\n      try {\r\n        // Assuming getCity(id) fetches city information by CityID\r\n        const cityData = await getCity(log.CityID);\r\n        if (cityData) {\r\n          setCityName(cityData.name); // Update the city name state\r\n        } else {\r\n          setError(\"City not found.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch city data.\");\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (log.CityID) {\r\n      fetchCity(); // Trigger the fetch when the CityID is available\r\n    }\r\n  }, [log.CityID]); // Dependency array ensures the effect runs when CityID changes\r\n\r\n  if (isLoading) return <p>Loading city...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"travel-log-item\">\r\n      <h3>{cityName}</h3> {/* Displaying the city name */}\r\n      <p><strong>Date:</strong> {log.Date}</p> {/* Ensure log.Date is being used */}\r\n      <p><strong>Duration:</strong> {log.DurationOfStay} days</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelLogItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMb,OAAO,CAACI,GAAG,CAACU,MAAM,CAAC;QAC1C,IAAID,QAAQ,EAAE;UACZN,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QAC9B,CAAC,MAAM;UACLJ,QAAQ,CAAC,iBAAiB,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZL,QAAQ,CAAC,4BAA4B,CAAC;QACtCM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;MACpB,CAAC,SAAS;QACRP,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,IAAIL,GAAG,CAACU,MAAM,EAAE;MACdF,SAAS,CAAC,CAAC,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACR,GAAG,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;;EAElB,IAAIN,SAAS,EAAE,oBAAON,OAAA;IAAAgB,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC5C,IAAIZ,KAAK,EAAE,oBAAOR,OAAA;IAAAgB,QAAA,GAAG,SAAO,EAACR,KAAK;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEvC,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAKZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eACpBpB,OAAA;MAAAgB,QAAA,gBAAGhB,OAAA;QAAAgB,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAClB,GAAG,CAACoB,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eACzCpB,OAAA;MAAAgB,QAAA,gBAAGhB,OAAA;QAAAgB,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAClB,GAAG,CAACqB,cAAc,EAAC,OAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCIF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}