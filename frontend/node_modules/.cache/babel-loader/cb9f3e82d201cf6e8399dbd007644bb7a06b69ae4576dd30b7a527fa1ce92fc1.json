{"ast":null,"code":"var _jsxFileName = \"G:\\\\471Project\\\\VistaShare-main\\\\frontend\\\\newfrontend\\\\src\\\\user\\\\pages\\\\UserPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport AuthContext from '../../shared/context/auth-context';\nimport { getPostsByUserId } from '../../shared/util/dataGetters';\nimport PostItem from '../components/PostItem'; // Assuming you have a component to display individual posts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = () => {\n  _s();\n  const {\n    Credentials\n  } = useContext(AuthContext); // Get the logged-in user's credentials\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const fetchedPosts = await getPostsByUserId(Credentials.userId);\n        if (fetchedPosts) {\n          setPosts(fetchedPosts);\n        } else {\n          setError('No posts found for this user.');\n        }\n      } catch (err) {\n        setError('Failed to fetch posts');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (Credentials.userId) {\n      fetchPosts();\n    }\n  }, [Credentials.userId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post.PostID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPosts, \"HINbxKoj5rYWs+PuOswmkIt0e0g=\");\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","getPostsByUserId","PostItem","jsxDEV","_jsxDEV","UserPosts","_s","Credentials","posts","setPosts","loading","setLoading","error","setError","fetchPosts","fetchedPosts","userId","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","PostID","_c","$RefreshReg$"],"sources":["G:/471Project/VistaShare-main/frontend/newfrontend/src/user/pages/UserPosts.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport AuthContext from '../../shared/context/auth-context';\r\nimport { getPostsByUserId } from '../../shared/util/dataGetters';\r\nimport PostItem from '../components/PostItem'; // Assuming you have a component to display individual posts\r\n\r\nconst UserPosts = () => {\r\n  const { Credentials } = useContext(AuthContext); // Get the logged-in user's credentials\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const fetchedPosts = await getPostsByUserId(Credentials.userId);\r\n        if (fetchedPosts) {\r\n          setPosts(fetchedPosts);\r\n        } else {\r\n          setError('No posts found for this user.');\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to fetch posts');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (Credentials.userId) {\r\n      fetchPosts();\r\n    }\r\n  }, [Credentials.userId]);\r\n\r\n  if (loading) return <div>Loading posts...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Your Posts</h1>\r\n      <div>\r\n        {posts.length > 0 ? (\r\n          posts.map(post => (\r\n            <PostItem key={post.PostID} post={post} />\r\n          ))\r\n        ) : (\r\n          <p>No posts available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPosts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,OAAOC,QAAQ,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAY,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMd,gBAAgB,CAACM,WAAW,CAACS,MAAM,CAAC;QAC/D,IAAID,YAAY,EAAE;UAChBN,QAAQ,CAACM,YAAY,CAAC;QACxB,CAAC,MAAM;UACLF,QAAQ,CAAC,+BAA+B,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZJ,QAAQ,CAAC,uBAAuB,CAAC;QACjCK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC;MACpB,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIJ,WAAW,CAACS,MAAM,EAAE;MACtBF,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACP,WAAW,CAACS,MAAM,CAAC,CAAC;EAExB,IAAIN,OAAO,EAAE,oBAAON,OAAA;IAAAe,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC/C,IAAIX,KAAK,EAAE,oBAAOR,OAAA;IAAAe,QAAA,EAAMP;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnB,OAAA;MAAAe,QAAA,EACGX,KAAK,CAACgB,MAAM,GAAG,CAAC,GACfhB,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACZtB,OAAA,CAACF,QAAQ;QAAmBwB,IAAI,EAAEA;MAAK,GAAxBA,IAAI,CAACC,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC1C,CAAC,gBAEFnB,OAAA;QAAAe,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7CID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}